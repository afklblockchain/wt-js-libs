[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "libs/.external-ecmascript.js",
    "static": true,
    "longname": "libs/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "libs/BookingData.js",
    "content": "const _ = require('lodash');\nconst utils = require('./utils/index');\nconst HotelManager = require('./HotelManager');\n\n/**\n * Methods that let managers and clients query the blockchain about hotel booking costs, history,\n * and status.\n * @example\n *   const data = new BookingData(web3)\n */\nclass BookingData {\n\n  /**\n   * Instantiates with a web3 object whose provider has been set\n   * @param  {Object} web3\n   * @return {BookingData}\n   */\n  constructor(web3){\n    this.context = {};\n    this.context.web3 = web3;\n    this.manager = new HotelManager({web3: web3});\n  }\n\n  /**\n   * Gets the national currency cost of a booking for a range of days. Check-in is on the\n   * first day, check-out on the last.\n   * @param  {Address}          unitAddress  Unit contract to edit\n   * @param  {Date }            fromDate     check-in date\n   * @param  {Number}           daysAmount   integer number of days to book.\n   * @return {Number}           Floating point cost ex: 100.00\n   * @example\n      const cost = await lib.getCost('0xab3..cd', new Date('5/31/2020'), 5);\n   */\n  async getCost(unitAddress, fromDate, daysAmount){\n    const fromDay = utils.formatDate(fromDate);\n    const unit = utils.getInstance('HotelUnit', unitAddress, this.context);\n    const cost = await unit.methods.getCost(fromDay, daysAmount).call();\n    return utils.bnToPrice(cost);\n  }\n\n  /**\n   * Gets the LifToken cost of a booking for a range of days. Check-in is on the first day,\n   * check-out on the last.\n   * @param  {Address}          unitAddress  Unit contract to edit\n   * @param  {Date }            fromDate     check-in date\n   * @param  {Number}           daysAmount   integer number of days to book.\n   * @return {Number}           Lif\n   * @example\n      const cost = await lib.getCost('0xab3..cd', new Date('5/31/2020'), 5);\n   */\n  async getLifCost(unitAddress, fromDate, daysAmount){\n    const fromDay = utils.formatDate(fromDate);\n    const unit = utils.getInstance('HotelUnit', unitAddress, this.context);\n    const wei = await unit.methods.getLifCost(fromDay, daysAmount).call();\n\n    return utils.lifWei2Lif(wei, this.context);\n  }\n\n  /**\n   * Checks the availability of a unit for a range of days\n   * @param  {Address} unitAddress Unit contract address\n   * @param  {Date}    fromDate    check-in date\n   * @param  {Number}  daysAmount  number of days\n   * @return {Boolean}\n   */\n  async unitIsAvailable(unitAddress, fromDate, daysAmount){\n    const unit = utils.getInstance('HotelUnit', unitAddress, this.context);\n    const fromDay = utils.formatDate(fromDate);\n    const range = _.range(fromDay, fromDay + daysAmount);\n\n    const isActive = await unit.methods.active().call();\n    if (!isActive) return false;\n\n    for (let day of range) {\n\n      const {\n        specialPrice,\n        specialLifPrice,\n        bookedBy\n      } = await this.manager.getReservation(unitAddress, day);\n\n      if (!utils.isZeroAddress(bookedBy)) return false;\n    }\n    return true;\n  }\n\n  /**\n   * Gets the bookings history for hotel(s). If `fromBlock` is ommitted, method will search from the\n   * creation block of each Hotel contract.\n   * @param  {Address|Address[]} _addresses  Hotel contract address(es) to fetch bookings for\n   * @param  {Number}            fromBlock   Optional: block to begin searching from.\n   * @return {Promise}                       Array of bookings objects\n   * @example\n   * [\n   *   {\n   *     \"transactionHash\": \"0x0ed3a16220e3b0cab...6ab8225ed0b6bad6ffc9640694d\",\n   *     \"blockNumber\": 25,\n   *     \"id\": \"log_f72920af\",\n   *     \"from\": \"0xc9F805a42837E78D5566f6A04Dba7167F8c6A830\",\n   *     \"unit\": \"0xcE85f98D04B25deaa27406492B6d6B747B837741\",\n   *     \"fromDate\": \"2020-10-10T07:00:00.000Z\",\n   *     \"daysAmount\": \"5\"\n   *    }\n   * ]\n   */\n  async getBookings(_addresses, fromBlock=0){\n    let hotelsToQuery = [];\n    let bookings = [];\n\n    (Array.isArray(_addresses))\n      ? hotelsToQuery = _addresses\n      : hotelsToQuery.push(_addresses);\n\n    if (!hotelsToQuery.length) return [];\n\n    let startedEvents;\n    let finishEvents;\n    let bookEvents;\n    let finished;\n    //TX hashes of CallStarted events indexed by corresponding hashes of CallFinished events\n    let startedMappedByFinished = [];\n    for (let address of hotelsToQuery){\n      const hotel = utils.getInstance('Hotel', address, this.context);\n\n      bookEvents = await hotel.getPastEvents('Book', {\n        fromBlock: fromBlock\n      });\n\n      startedEvents = await hotel.getPastEvents('CallStarted', {\n        fromBlock: fromBlock\n      });\n\n      finishEvents = await hotel.getPastEvents('CallFinish', {\n        fromBlock: fromBlock\n      })\n\n      // Filter out started events with a corresponding Book event\n      // and map finish events -> started events\n      finished = startedEvents.filter(event => {\n        let found = finishEvents\n          .findIndex(item => item.returnValues.dataHash === event.returnValues.dataHash);\n        if(found !== -1) {\n          startedMappedByFinished[finishEvents[found].transactionHash] = event.transactionHash;\n        }\n        return found !== -1;\n      })\n\n      for (let event of bookEvents){\n        let guestData;\n\n        //If guest data can't be retreived, it means the booking required a\n        //confirmation, so the guestData can be found in the CallStarted tx\n        try {\n          guestData = await utils.getGuestData(event.transactionHash, this.context)\n        } catch(e) {\n          guestData = await utils.getGuestData(startedMappedByFinished[event.transactionHash], this.context)\n        }\n\n        bookings.push({\n          guestData: guestData,\n          transactionHash: event.transactionHash,\n          blockNumber: event.blockNumber,\n          id: event.id,\n          from: event.returnValues.from,\n          unit: event.returnValues.unit,\n          fromDate: utils.parseDate(event.returnValues.fromDay),\n          daysAmount: event.returnValues.daysAmount\n        })\n      };\n    }\n    return bookings;\n  };\n\n  /**\n   * Gets pending bookings requests for hotel(s). This is the set of all requests that have not\n   * yet been confirmed by a hotel manager. If `fromBlock` is ommitted, method will search from\n   * the creation block of each Hotel contract.\n   * @param  {Address|Address[]}  _addresses  Hotel contract address(es) to fetch bookings for\n   * @param  {Number}             fromBlock   Optional: block to begin searching from.\n   * @return {Promise}            Array of bookings objects\n   * @example\n   *  [\n   *    {\n   *     \"transactionHash\": \"0x18c59c3f570d4013e0...470ead6560fdcc738a194d0\",\n   *     \"blockNumber\": 26,\n   *     \"id\": \"log_9b3eb752\",\n   *     \"from\": \"0x522701D427e1C2e039fdC32Db41972A46dFD7755\",\n   *     \"dataHash\": \"0x4077e0fee8018bb3dd7...ea91b3d7ced260761c73fa\",\n   *     \"hotel\": '0xC9c4DdF85995dCB15377Cf8A262E0e2F19eA7011',\n   *     \"unit\": '0xcf0a860c363d7acd449be319a94d9abfae9dd3eb',\n   *     \"fromDate\": 2020-10-10T07:00:00.000Z,\n   *     \"daysAmount\": '5'\n   *    }\n   *   ]\n   */\n  async getBookingRequests(_addresses, fromBlock=0){\n    let hotelsToQuery = [];\n    let requests = [];\n\n    (Array.isArray(_addresses))\n      ? hotelsToQuery = _addresses\n      : hotelsToQuery.push(_addresses);\n\n    if (!hotelsToQuery.length) return [];\n\n    let startedEvents;\n    let finishEvents;\n    let unfinished;\n\n    for (let address of hotelsToQuery){\n      const hotel = utils.getInstance('Hotel', address, this.context);\n\n      startedEvents = await hotel.getPastEvents('CallStarted', {\n        fromBlock: fromBlock\n      });\n\n      finishEvents = await hotel.getPastEvents('CallFinish', {\n        fromBlock: fromBlock\n      })\n\n      // Filter out started events without a corresponding finishing event\n      unfinished = startedEvents.filter(event => {\n        let found = finishEvents\n          .findIndex(item => item.returnValues.dataHash === event.returnValues.dataHash);\n\n        return found === -1;\n      })\n\n      for(let event of unfinished){\n        const guestData = await utils.getGuestData(event.transactionHash, this.context);\n\n        //get calldata and decode it for booking data\n        let publicCallData = await hotel.methods.getPublicCallData(event.returnValues.dataHash).call();\n        let bookData = {};\n        utils.abiDecoder.decodeMethod(publicCallData).params.forEach((param) => {\n          bookData[param.name] = param.value;\n        });\n\n        requests.push({\n          guestData: guestData,\n          transactionHash: event.transactionHash,\n          blockNumber: event.blockNumber,\n          id: event.id,\n          from: event.returnValues.from,\n          dataHash: event.returnValues.dataHash,\n          hotel: address,\n          unit: this.context.web3.utils.toChecksumAddress(bookData.unitAddress),\n          fromDate: utils.parseDate(bookData.fromDay),\n          daysAmount: bookData.daysAmount\n        })\n      };\n    }\n\n    return requests;\n  }\n}\n\nmodule.exports = BookingData;\n",
    "static": true,
    "longname": "/Users/aklempner/Repos/WindingTree/libs-updated/wt-js-libs/libs/BookingData.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "_",
    "memberof": "libs/BookingData.js",
    "static": true,
    "longname": "libs/BookingData.js~_",
    "access": "private",
    "export": false,
    "importPath": "wt-js-libs/libs/BookingData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "utils",
    "memberof": "libs/BookingData.js",
    "static": true,
    "longname": "libs/BookingData.js~utils",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/BookingData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "HotelManager",
    "memberof": "libs/BookingData.js",
    "static": true,
    "longname": "libs/BookingData.js~HotelManager",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/BookingData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "class",
    "name": "BookingData",
    "memberof": "libs/BookingData.js",
    "static": true,
    "longname": "libs/BookingData.js~BookingData",
    "access": "public",
    "export": true,
    "importPath": "wt-js-libs/libs/BookingData.js",
    "importStyle": "BookingData",
    "description": "Methods that let managers and clients query the blockchain about hotel booking costs, history,\nand status.",
    "examples": [
      "  const data = new BookingData(web3)"
    ],
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 53,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "libs/BookingData.js~BookingData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "libs/BookingData.js~BookingData#constructor",
    "access": "public",
    "description": "Instantiates with a web3 object whose provider has been set",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "web3",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BookingData"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "context",
    "memberof": "libs/BookingData.js~BookingData",
    "static": false,
    "longname": "libs/BookingData.js~BookingData#context",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "manager",
    "memberof": "libs/BookingData.js~BookingData",
    "static": false,
    "longname": "libs/BookingData.js~BookingData#manager",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "getCost",
    "memberof": "libs/BookingData.js~BookingData",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/BookingData.js~BookingData#getCost",
    "access": "public",
    "description": "Gets the national currency cost of a booking for a range of days. Check-in is on the\nfirst day, check-out on the last.",
    "examples": [
      "const cost = await lib.getCost('0xab3..cd', new Date('5/31/2020'), 5);"
    ],
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "Unit contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "Date "
        ],
        "spread": false,
        "optional": false,
        "name": "fromDate",
        "description": "check-in date"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "daysAmount",
        "description": "integer number of days to book."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "Floating point cost ex: 100.00"
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "getLifCost",
    "memberof": "libs/BookingData.js~BookingData",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/BookingData.js~BookingData#getLifCost",
    "access": "public",
    "description": "Gets the LifToken cost of a booking for a range of days. Check-in is on the first day,\ncheck-out on the last.",
    "examples": [
      "const cost = await lib.getCost('0xab3..cd', new Date('5/31/2020'), 5);"
    ],
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "Unit contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "Date "
        ],
        "spread": false,
        "optional": false,
        "name": "fromDate",
        "description": "check-in date"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "daysAmount",
        "description": "integer number of days to book."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "Lif"
    }
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "unitIsAvailable",
    "memberof": "libs/BookingData.js~BookingData",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/BookingData.js~BookingData#unitIsAvailable",
    "access": "public",
    "description": "Checks the availability of a unit for a range of days",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "Unit contract address"
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "fromDate",
        "description": "check-in date"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "daysAmount",
        "description": "number of days"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "getBookings",
    "memberof": "libs/BookingData.js~BookingData",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/BookingData.js~BookingData#getBookings",
    "access": "public",
    "description": "Gets the bookings history for hotel(s). If `fromBlock` is ommitted, method will search from the\ncreation block of each Hotel contract.",
    "examples": [
      "[\n  {\n    \"transactionHash\": \"0x0ed3a16220e3b0cab...6ab8225ed0b6bad6ffc9640694d\",\n    \"blockNumber\": 25,\n    \"id\": \"log_f72920af\",\n    \"from\": \"0xc9F805a42837E78D5566f6A04Dba7167F8c6A830\",\n    \"unit\": \"0xcE85f98D04B25deaa27406492B6d6B747B837741\",\n    \"fromDate\": \"2020-10-10T07:00:00.000Z\",\n    \"daysAmount\": \"5\"\n   }\n]"
    ],
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address",
          "Address[]"
        ],
        "spread": false,
        "optional": false,
        "name": "_addresses",
        "description": "Hotel contract address(es) to fetch bookings for"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "fromBlock",
        "description": "Optional: block to begin searching from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Array of bookings objects"
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "getBookingRequests",
    "memberof": "libs/BookingData.js~BookingData",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/BookingData.js~BookingData#getBookingRequests",
    "access": "public",
    "description": "Gets pending bookings requests for hotel(s). This is the set of all requests that have not\nyet been confirmed by a hotel manager. If `fromBlock` is ommitted, method will search from\nthe creation block of each Hotel contract.",
    "examples": [
      " [\n   {\n    \"transactionHash\": \"0x18c59c3f570d4013e0...470ead6560fdcc738a194d0\",\n    \"blockNumber\": 26,\n    \"id\": \"log_9b3eb752\",\n    \"from\": \"0x522701D427e1C2e039fdC32Db41972A46dFD7755\",\n    \"dataHash\": \"0x4077e0fee8018bb3dd7...ea91b3d7ced260761c73fa\",\n    \"hotel\": '0xC9c4DdF85995dCB15377Cf8A262E0e2F19eA7011',\n    \"unit\": '0xcf0a860c363d7acd449be319a94d9abfae9dd3eb',\n    \"fromDate\": 2020-10-10T07:00:00.000Z,\n    \"daysAmount\": '5'\n   }\n  ]"
    ],
    "lineNumber": 196,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address",
          "Address[]"
        ],
        "spread": false,
        "optional": false,
        "name": "_addresses",
        "description": "Hotel contract address(es) to fetch bookings for"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "fromBlock",
        "description": "Optional: block to begin searching from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Array of bookings objects"
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "libs/HotelEvents.js",
    "content": "const _ = require('lodash');\nconst utils = require('./utils/index');\nconst HotelManager = require('./HotelManager');\nconst EventEmitter = require('events');\n\n/**\n * Methods that let managers and clients subscribe to blockchain events emitted by booking\n * activity.\n * @example\n *   const events = new HotelEvents({web3: web3})\n */\nclass HotelEvents extends EventEmitter {\n\n  /**\n   * HotelEvents constructor\n   * @param  {Object} _web3\n   * @return {HotelEvents}\n   */\n  constructor(_web3){\n    super();\n\n    /**\n     * Addresses of the Hotel contracts whose events the class emits.\n     * @type {Array}\n     */\n    this.subscriptions = [];\n\n    /**\n     * Web3 instance initialised with a provider.\n     * @type {Object}\n     */\n    this.web3 = _web3;\n  }\n\n  /**\n   * Hotel contract events formatter and publisher.\n   * @param  {Object} err   web3 error object\n   * @param  {Object} event web3 event object\n   */\n  async _emitEvent(err, event){\n    if(!event) return;\n\n    const guestData = await utils.getGuestData(event.transactionHash, {web3: this.web3});\n\n    const defaults = {\n      address: event.address,\n      guestData: guestData,\n      transactionHash: event.transactionHash,\n      blockNumber: event.blockNumber,\n      id: event.id,\n    };\n\n    const eventArgsMap = {\n      \"Book\": {\n        from: event.returnValues.from,\n        unit: event.returnValues.unit,\n        fromDate: utils.parseDate(event.returnValues.fromDay),\n        daysAmount: event.returnValues.daysAmount\n      },\n      \"CallStarted\": {\n        from: event.returnValues.from,\n        dataHash: event.returnValues.dataHash,\n      },\n      \"CallFinish\": {\n        from: event.returnValues.from,\n        dataHash: event.returnValues.dataHash,\n      }\n    };\n\n    const eventPacket = Object.assign(defaults, eventArgsMap[event.name]);\n    this.emit(event.name, eventPacket);\n  }\n\n  /**\n   * Subscribes to `Book`, `CallStarted` and `CallFinish` events emitted by Hotel\n   * contracts\n   * @param  {Address|Address[]} _addresses Hotel contracts to listen to\n   */\n  subscribe(_addresses){\n    let hotelsToMonitor = [];\n\n    (Array.isArray(_addresses))\n      ? hotelsToMonitor = _addresses\n      : hotelsToMonitor.push(_addresses);\n\n    // Prevent duplicate subscriptions\n    hotelsToMonitor = hotelsToMonitor.filter( address => {\n      return this.subscriptions.findIndex(item => item === address) === -1;\n    })\n\n    let events;\n    for (let address of hotelsToMonitor){\n      const hotel = utils.getInstance('Hotel', address, {web3: this.web3});\n\n      hotel.events.Book({}, this._emitEvent.bind(this));\n      hotel.events.CallStarted({}, this._emitEvent.bind(this));\n      hotel.events.CallFinish({}, this._emitEvent.bind(this));\n\n      this.subscriptions.push(address);\n    }\n  }\n}\n\nmodule.exports = HotelEvents;\n\n",
    "static": true,
    "longname": "/Users/aklempner/Repos/WindingTree/libs-updated/wt-js-libs/libs/HotelEvents.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "_",
    "memberof": "libs/HotelEvents.js",
    "static": true,
    "longname": "libs/HotelEvents.js~_",
    "access": "private",
    "export": false,
    "importPath": "wt-js-libs/libs/HotelEvents.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "utils",
    "memberof": "libs/HotelEvents.js",
    "static": true,
    "longname": "libs/HotelEvents.js~utils",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/HotelEvents.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "HotelManager",
    "memberof": "libs/HotelEvents.js",
    "static": true,
    "longname": "libs/HotelEvents.js~HotelManager",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/HotelEvents.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "libs/HotelEvents.js",
    "static": true,
    "longname": "libs/HotelEvents.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/HotelEvents.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "class",
    "name": "HotelEvents",
    "memberof": "libs/HotelEvents.js",
    "static": true,
    "longname": "libs/HotelEvents.js~HotelEvents",
    "access": "public",
    "export": true,
    "importPath": "wt-js-libs/libs/HotelEvents.js",
    "importStyle": "HotelEvents",
    "description": "Methods that let managers and clients subscribe to blockchain events emitted by booking\nactivity.",
    "examples": [
      "  const events = new HotelEvents({web3: web3})"
    ],
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "EventEmitter"
    ]
  },
  {
    "__docId__": 67,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "libs/HotelEvents.js~HotelEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "libs/HotelEvents.js~HotelEvents#constructor",
    "access": "public",
    "description": "HotelEvents constructor",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "_web3",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HotelEvents"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "subscriptions",
    "memberof": "libs/HotelEvents.js~HotelEvents",
    "static": false,
    "longname": "libs/HotelEvents.js~HotelEvents#subscriptions",
    "access": "public",
    "description": "Addresses of the Hotel contracts whose events the class emits.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "web3",
    "memberof": "libs/HotelEvents.js~HotelEvents",
    "static": false,
    "longname": "libs/HotelEvents.js~HotelEvents#web3",
    "access": "public",
    "description": "Web3 instance initialised with a provider.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "_emitEvent",
    "memberof": "libs/HotelEvents.js~HotelEvents",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelEvents.js~HotelEvents#_emitEvent",
    "access": "private",
    "description": "Hotel contract events formatter and publisher.",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "err",
        "description": "web3 error object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "web3 event object"
      }
    ],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "subscribe",
    "memberof": "libs/HotelEvents.js~HotelEvents",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "libs/HotelEvents.js~HotelEvents#subscribe",
    "access": "public",
    "description": "Subscribes to `Book`, `CallStarted` and `CallFinish` events emitted by Hotel\ncontracts",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address",
          "Address[]"
        ],
        "spread": false,
        "optional": false,
        "name": "_addresses",
        "description": "Hotel contracts to listen to"
      }
    ],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "libs/HotelManager.js",
    "content": "const utils = require('./utils/index.js');\n\n/**\n * Methods that allow a manager to create / administrate hotels\n * @example\n *   const hotel = new HotelManager({\n *     indexAddress: '0x75a3...b', // Address of the WTIndex contract that lists this hotel\n *     owner: '0xab3...cd',        // Payer of lib tx fees, registered as owner the WTIndex\n *     web3: web3,                 // Instantiated web3 object with its provider set.\n *   });\n */\nclass HotelManager {\n\n  /**\n   * Instantiates a HotelManager with a web3 object, an owner account address, and the address of\n   * the Index contract that has registered hotel assets.\n   * @param  {Object} options (see example above)\n   * @return {HotelManager}\n   */\n  constructor(options){\n    this.hotels = options.hotels || {};\n    this.hotelsAddrs = [];\n    this.owner = options.owner || null;\n    this.web3 = options.web3 || {};\n    this.context = options;\n\n    this.WTIndex = utils.getInstance('WTIndex', options.indexAddress, this.context);\n\n    this.context.WTIndex = this.WTIndex;\n    this.context.gasMargin = options.gasMargin || 1;\n  }\n\n  /**\n   * Gets non-bookings data for a Hotel contract (e.g info about its location, unit types\n   * and units).\n   * @param  {Address} hotelAddress address of Hotel contract\n   * @return {Object}\n   * @example\n   *  (we should have a doc link to JSON output here)\n   */\n  async getHotel(hotelAddress){\n    const hotel = utils.getInstance('Hotel', hotelAddress, this.context);\n    this.hotels[hotelAddress] = await utils.getHotelInfo(hotel, this.context);\n    return this.hotels[hotelAddress];\n  }\n\n  /**\n   * Gets non-bookings data for all the hotels managed by the HotelManager (e.g info about their\n   * location, unit types and units).\n   * @return {Object}\n   * @example\n   * (we should have a doc link to JSON output here)\n   */\n  async getHotels(){\n    this.hotelsAddrs = await this.WTIndex.methods\n      .getHotelsByManager(this.owner)\n      .call();\n\n    this.hotelsAddrs = this.hotelsAddrs.filter( addr => !utils.isZeroAddress(addr));\n\n    if (!this.hotelsAddrs.length)\n      return null;\n\n    this.hotels = {};\n\n    for (let address of this.hotelsAddrs){\n      await this.getHotel(address)\n    }\n\n    return this.hotels;\n  }\n\n  /**\n   * Gets a unit's reservation data for a specific UTC day or date.\n   * @param  {Address}        unitAddress contract address of Unit\n   * @param  {Date | Number}  day         Date | UTC day since 1970\n   * @return {Promievent}\n   * @example\n   *   const {\n   *     specialPrice,    // Price: 200.00\n   *     specialLifPrice, // LifPrice (ether): 20\n   *     bookedBy         // Address: e.g. '0x39a...2b'\n   *   } = await lib.getReservation('0xab3..cd', new Date('5/31/2020'));\n   */\n  async getReservation(unitAddress, day) {\n    if (day instanceof Date)\n      day = utils.formatDate(day);\n\n    const unit = utils.getInstance('HotelUnit', unitAddress, this.context);\n    const result = await unit.methods.getReservation(day).call();\n\n    const specialPrice = utils.bnToPrice(result[0]);\n    const specialLifPrice = utils.lifWei2Lif(result[1], this.context);\n    const bookedBy = result[2];\n\n    return {\n      specialPrice: specialPrice,\n      specialLifPrice: specialLifPrice,\n      bookedBy: bookedBy\n    }\n  }\n\n  /**\n   * Gets the hotel data previously retrieved by a `getHotel` call\n   * @return {Object}\n   * @example\n   *   (we should have a doc link to JSON output here)\n   */\n  getCachedHotel(hotelAddress) {\n    return this.hotels[hotelAddress];\n  }\n\n  /**\n   * Gets hotel data previously retrieved by a `getHotels` call (see above)\n   * @return {Object}\n   * @example\n   *   (we should have a doc link to JSON output here)\n   */\n  getCachedHotels() {\n    return this.hotels;\n  }\n\n  /**\n   * Gets the contract addresses of all hotels previously retrieved by a `getHotels` call\n   * @return {Array}\n   * @example\n   *  const [Hotel1, Hotel2] = lib.getHotelsAddrs();\n   */\n  getCachedHotelsAddrs() {\n    return this.hotelsAddrs;\n  }\n\n  /**\n   * Sets the Hotel class's web3 instance.\n   * @param {Object} _web3 Web3 instance, already instantiated with a provider\n   */\n  setWeb3(_web3){\n    this.web3 = _web3;\n    this.context.web3 = _web3;\n  }\n\n  /**\n   * Creates a Hotel contract instance and registers it with the HotelManager's WTIndex contract\n   * @param  {String} name         name\n   * @param  {String} description  description\n   * @return {Promievent}\n   */\n  async createHotel(name, description){\n    const estimate = await this.WTIndex.methods\n      .registerHotel(name, description)\n      .estimateGas();\n\n    const data = await this.WTIndex.methods\n      .registerHotel(name, description)\n      .encodeABI();\n\n    const options = {\n      from: this.owner,\n      to: this.WTIndex.options.address,\n      gas: await utils.addGasMargin(estimate, this.context),\n      data: data\n    }\n\n    return this.web3.eth.sendTransaction(options);\n  }\n\n  /**\n   * Removes a hotel from the WTIndex registry\n   * @param  {Address} address address of Hotel contract to de-list\n   * @return {Promievent}\n   */\n  async removeHotel(address){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(address, this.context);\n\n    const data = await this.WTIndex.methods\n      .removeHotel(index)\n      .encodeABI();\n\n    const options = {\n      from: this.owner,\n      to: this.WTIndex.options.address,\n      data: data\n    };\n\n    const estimate = await this.web3.eth.estimateGas(options);\n    options.gas = await utils.addGasMargin(estimate, this.context);\n\n    return this.web3.eth.sendTransaction(options);\n  }\n\n  /**\n   * Sets a boolean flag in a Hotel contract that determines whether bookings\n   * can happen instantly or require confirmation by a manager before they\n   * proceed.\n   * @param {Address} hotelAddress  Contract address of the hotel to edit.\n   * @param {Boolean} value         t/f: require confirmation\n   */\n  async setRequireConfirmation(hotelAddress, value){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const data = await hotel.methods\n      .changeConfirmation(value)\n      .encodeABI();\n\n    return utils.execute(data, index, this.context);\n  }\n\n  /**\n   * Edits a hotel's name and description.\n   * @param  {Address} hotelAddress contract address\n   * @param  {String}  name         hotel name\n   * @param  {String}  description  hotel description\n   * @return {Promievent}\n   */\n  async changeHotelInfo(hotelAddress, name, description){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const data = await hotel.methods\n      .editInfo(name, description)\n      .encodeABI();\n\n    return utils.execute(data, index, this.context);\n  }\n\n  /**\n   * Edits a hotel's physical address data.\n   * @param  {Address} hotelAddress contract address\n   * @param  {String} lineOne       physical address data\n   * @param  {String} lineTwo       physical address data\n   * @param  {String} zipCode       physical address data\n   * @param  {String} country       physical address data\n   * @return {Promievent}\n   */\n  async changeHotelAddress(hotelAddress, lineOne, lineTwo, zipCode, country){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const data = await hotel.methods\n      .editAddress(lineOne, lineTwo, zipCode, country)\n      .encodeABI();\n\n    return utils.execute(data, index, this.context);\n  }\n\n  /**\n   * Edits a hotel's coordinate location and timezone data.\n   * @param  {Address} hotelAddress contract address\n   * @param  {Number} timezone      positive integer timezone relative to GMT\n   * @param  {Number} latitude      GPS latitude location data e.g `-3.703578`\n   * @param  {Number} longitude     GPS longitude location data e.g `40.426371`\n   * @return {Promievent}\n   */\n  async changeHotelLocation(hotelAddress, timezone, latitude, longitude){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const {long, lat} = utils.locationToUint(longitude, latitude);\n\n    const data = await hotel.methods\n      .editLocation(timezone, long, lat)\n      .encodeABI();\n\n    return utils.execute(data, index, this.context);\n  }\n\n  /**\n   * Adds an image to a hotel\n   * @param  {Address} hotelAddress contract address\n   * @param  {String} url           url of the image to add\n   * @return {Promievent}\n   */\n  async addImageHotel(hotelAddress, url){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const data = await hotel.methods\n      .addImage(url)\n      .encodeABI();\n\n    return utils.execute(data, index, this.context);\n  }\n\n  /**\n   * Removes an image from a hotel\n   * @param  {Address} hotelAddress contract address\n   * @param  {Number}  imageIndex   index of the image to remove\n   * @return {Promievent}\n   */\n  async removeImageHotel(hotelAddress, imageIndex){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const data = await hotel.methods\n      .removeImage(imageIndex)\n      .encodeABI();\n\n    return utils.execute(data, index, this.context);\n  }\n\n  /**\n   * Confirms a pending booking request. `reservationId` is the value of the `dataHash` field\n   * from the `CallStarted` event fired when a booking that requires confirmation is initiated.\n   * @param  {Address} hotelAddress  Hotel contract address that controls unit requested\n   * @param  {String}  reservationId data hash.\n   * @return {Promievent}\n   */\n  async confirmBooking(hotelAddress, reservationId){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const data = await hotel.methods\n      .continueCall(reservationId)\n      .encodeABI();\n\n    return utils.execute(data, index, this.context);\n  }\n\n  /**\n   * Deploys a UnitType contract and registers it to an existing Hotel contract\n   * @param  {Address} hotelAddress Hotel contract that will control created UnitType contract\n   * @param  {String} unitType      unique plain text id of UnitType, ex: 'BASIC_ROOM'\n   * @return {Promievent}\n   */\n  async addUnitType(hotelAddress, unitType){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const instance = await utils.deployUnitType(unitType, hotelAddress, this.context)\n\n    const data = hotel.methods\n      .addUnitType(instance.options.address)\n      .encodeABI();\n\n    return utils.execute(data, index, this.context);\n  }\n\n  /**\n   * Unregisters a UnitType contract from an existing Hotel contract\n   * @param  {Address} hotelAddress Hotel contract that controls the UnitType contract to remove\n   * @param  {String}  unitType     unique plain text id of UnitType, ex: 'BASIC_ROOM'\n   * @return {Promievent}\n   */\n  async removeUnitType(hotelAddress, unitType){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const typeIndex = await utils.getUnitTypeIndex(hotel, unitType, this.context);\n    const typeHex = this.web3.utils.toHex(unitType);\n\n    const data = hotel.methods\n      .removeUnitType(typeHex, typeIndex)\n      .encodeABI();\n\n    return utils.execute(data, index, this.context);\n  }\n\n  /**\n   * Edits a unit type's basic info data.\n   * @param  {Address} hotelAddress Hotel contract that controls the UnitType contract to edit\n   * @param  {String} unitType      unique plain text id of UnitType, ex: 'BASIC_ROOM'\n   * @param  {String} description   description: e.g. 'Simple. Clean.'\n   * @param  {Number} minGuests     minimum number of guests that can stay in UnitType\n   * @param  {Number} maxGuests     maximum number of guests that can stay in UnitType\n   * @param  {String} price         price of UnitType: e.g '50 euros'\n   * @return {Promievent}\n   */\n  async editUnitType(hotelAddress, unitType, description, minGuests, maxGuests, price){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const typeHex = this.web3.utils.toHex(unitType);\n    const address = await hotel.methods.getUnitType(typeHex).call();\n    const instance = utils.getInstance('HotelUnitType', address, this.context);\n\n    const editData = instance.methods\n      .edit(description, minGuests, maxGuests, price)\n      .encodeABI();\n\n    const hotelData = hotel.methods\n      .callUnitType(typeHex, editData)\n      .encodeABI();\n\n    return utils.execute(hotelData, index, this.context);\n  }\n\n  /**\n   * Adds an amenity to a unit type\n   * @param  {Address} hotelAddress Hotel contract that controls the UnitType contract to edit\n   * @param  {String} unitType      unique plain text id of UnitType, ex: 'BASIC_ROOM'\n   * @param  {Number} amenity       integer code of amenity to add: ex: 23\n   * @return {Promievent}\n   */\n  async addAmenity(hotelAddress, unitType, amenity){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const typeHex = this.web3.utils.toHex(unitType);\n    const address = await hotel.methods.getUnitType(typeHex).call();\n    const instance = utils.getInstance('HotelUnitType', address, this.context);\n\n    const amenityData = instance.methods\n      .addAmenity(amenity)\n      .encodeABI();\n\n    const hotelData = hotel.methods\n      .callUnitType(typeHex, amenityData)\n      .encodeABI();\n\n    return utils.execute(hotelData, index, this.context);\n  }\n\n  /**\n   * Removes an amenity from a unit type.\n   * @param  {Address} hotelAddress   Hotel contract that controls the UnitType contract to edit\n   * @param  {String}  unitType       unique plain text id of UnitType, ex: 'BASIC_ROOM'\n   * @param  {Number}  amenity        integer code of amenity to remove: ex: 23\n   * @return {Promievent}\n   */\n  async removeAmenity(hotelAddress, unitType, amenity){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const typeHex = this.web3.utils.toHex(unitType);\n    const address = await hotel.methods.getUnitType(typeHex).call();\n    const instance = utils.getInstance('HotelUnitType', address, this.context);\n\n    const amenityData = instance.methods\n      .removeAmenity(amenity)\n      .encodeABI();\n\n    const hotelData = hotel.methods\n      .callUnitType(typeHex, amenityData)\n      .encodeABI();\n\n    return utils.execute(hotelData, index, this.context);\n  }\n\n  /**\n   * Adds an image to a unit type\n   * @param  {Address} hotelAddress Hotel contract that controls the UnitType contract to edit\n   * @param  {String} unitType      unique plain text id of UnitType, ex: 'BASIC_ROOM'\n   * @param  {String} url           url of the image to add\n   * @return {Promievent}\n   */\n  async addImageUnitType(hotelAddress, unitType, url){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const typeHex = this.web3.utils.toHex(unitType);\n    const address = await hotel.methods.getUnitType(typeHex).call();\n    const instance = utils.getInstance('HotelUnitType', address, this.context);\n\n    const imageData = instance.methods\n      .addImage(url)\n      .encodeABI();\n\n    const hotelData = hotel.methods\n      .callUnitType(typeHex, imageData)\n      .encodeABI();\n\n    return utils.execute(hotelData, index, this.context);\n  }\n\n  /**\n   * Removes an image to a unit type\n   * @param  {Address} hotelAddress Hotel contract that controls the UnitType contract to edit\n   * @param  {String} unitType      unique plain text id of UnitType, ex: 'BASIC_ROOM'\n   * @param  {Number} imageIndex    index of the image to remove\n   * @return {Promievent}\n   */\n  async removeImageUnitType(hotelAddress, unitType, imageIndex){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const typeHex = this.web3.utils.toHex(unitType);\n    const address = await hotel.methods.getUnitType(typeHex).call();\n    const instance = utils.getInstance('HotelUnitType', address, this.context);\n\n    const imageData = instance.methods\n      .removeImage(imageIndex)\n      .encodeABI();\n\n    const hotelData = hotel.methods\n      .callUnitType(typeHex, imageData)\n      .encodeABI();\n\n    return utils.execute(hotelData, index, this.context);\n  }\n\n  /**\n   * Deploys a Unit contract and registers it to an existing Hotel contract\n   * @param {Address} hotelAddress  Hotel contract that will control created Unit contract\n   * @param {String}  unitType      unique plain text id of this units UnitType, ex: 'BASIC_ROOM'\n   * @return {Promievent}\n   */\n  async addUnit(hotelAddress, unitType){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const instance = await utils.deployUnit(unitType, hotelAddress, this.context)\n\n    const data = hotel.methods\n      .addUnit(instance.options.address)\n      .encodeABI();\n\n    return utils.execute(data, index, this.context);\n  }\n\n  /**\n   * Unregisters a Unit contract from an existing Hotel contract\n   * @param  {Address} hotelAddress   Hotel contract that controls the Unit contract to remove\n   * @param  {Address} unitAddress    Unit contract to remove\n   * @return {Promievent}\n   */\n  async removeUnit(hotelAddress, unitAddress){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const data = hotel.methods\n      .removeUnit(unitAddress)\n      .encodeABI();\n\n    return utils.execute(data, index, this.context);\n  }\n\n  /**\n   * Sets a Unit contracts `active` status. This determines whether or not it can be booked.\n   * @param {Address} hotelAddress  Hotel contract that controls the Unit contract to edit\n   * @param {Address} unitAddress   Unit contract to edit\n   * @param {Boolean} active        Unit is locked when false.\n   */\n  async setUnitActive(hotelAddress, unitAddress, active){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const unit = utils.getInstance('HotelUnit', unitAddress, this.context);\n\n    const unitData = unit.methods\n      .setActive(active)\n      .encodeABI();\n\n    const hotelData = hotel.methods\n      .callUnit(unit.options.address, unitData)\n      .encodeABI();\n\n    return utils.execute(hotelData, index, this.context);\n  }\n\n  /**\n   * Sets the default price for a unit\n   * @param {Address}   hotelAddress  Hotel contract that controls the Unit being edited\n   * @param {Address}   unitAddress   Unit contract to edit\n   * @param {Number}    price         Integer or floating point price\n   * @return {Promievent}\n   */\n  async setDefaultPrice(hotelAddress, unitAddress, price){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const uintPrice = utils.priceToUint(price);\n    const unit = utils.getInstance('HotelUnit', unitAddress, this.context);\n\n    const unitData = unit.methods\n      .setDefaultPrice(uintPrice)\n      .encodeABI();\n\n    const hotelData = hotel.methods\n      .callUnit(unit.options.address, unitData)\n      .encodeABI();\n\n    await utils.execute(hotelData, index, this.context);\n  }\n\n  /**\n   * Sets the default LifPrice for this unit\n   * @param  {Address}          hotelAddress Hotel contract that controls the Unit contract to edit\n   * @param  {Address}          unitAddress  Unit contract to edit\n   * @param  {String|Number|BN} price        Lif 'ether' (converted to wei by web3.utils.toWei)\n   * @return {Promievent}\n  */\n  async setDefaultLifPrice(hotelAddress, unitAddress, price){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const weiPrice = utils.lif2LifWei(price, this.context);\n    const unit = utils.getInstance('HotelUnit', unitAddress, this.context);\n\n    const unitData = unit.methods\n      .setDefaultLifPrice(weiPrice)\n      .encodeABI();\n\n    const hotelData = hotel.methods\n      .callUnit(unit.options.address, unitData)\n      .encodeABI();\n\n    await utils.execute(hotelData, index, this.context);\n  }\n\n  /**\n   * Changes the default currency code\n   * @param {Address}   hotelAddress  Hotel contract that controls the Unit being edited\n   * @param {Address}   unitAddress   Unit contract to edit\n   * @param {Number}    code          Integer currency code btw 0 and 255\n   * @param {Function}  converter     ex `euro = kroneToEuro(krone)`\n   * @param {Date}      convertStart  date to begin search of specialPrices\n   * @param {Date}      convertEnd    date (inclusive) to end search of specialPrices\n   * @return {Promievent}\n   */\n  async setCurrencyCode(hotelAddress, unitAddress, code, converter, convertStart, convertEnd){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    code = utils.currencyCodeToHex(code, this.context);\n    const unit = utils.getInstance('HotelUnit', unitAddress, this.context);\n\n    const unitData = unit.methods\n      .setCurrencyCode(code)\n      .encodeABI();\n\n    const hotelData = hotel.methods\n      .callUnit(unit.options.address, unitData)\n      .encodeABI();\n\n    await utils.execute(hotelData, index, this.context);\n\n    // -------------------------------- NB ----------------------------------------\n    // We probably need to iterate through a range of dates and\n    // convert special prices from old to new denomination. We probably also need\n    // to estimate how many we can do at once.\n  }\n\n  /**\n   * Sets a unit's national currency booking price for range of days. Check-in is on\n   * the first day, check-out on the last.\n   * @param  {Address} hotelAddress Hotel contract that controls the Unit contract to edit\n   * @param  {Addres}  unitAddress  Unit contract to edit\n   * @param  {Number}  price        integer or floating point price\n   * @param  {Date}    fromDate     check-in date\n   * @param  {Number}  amountDays   integer number of days to book.\n   * @return {Promievent}\n   */\n  async setUnitSpecialPrice(hotelAddress, unitAddress, price, fromDate, amountDays){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const fromDay = utils.formatDate(fromDate);\n    const uintPrice = utils.priceToUint(price);\n\n    const unit = utils.getInstance('HotelUnit', unitAddress, this.context);\n\n    const unitData = unit.methods\n      .setSpecialPrice(uintPrice, fromDay, amountDays)\n      .encodeABI();\n\n    const hotelData = hotel.methods\n      .callUnit(unit.options.address, unitData)\n      .encodeABI();\n\n    return utils.execute(hotelData, index, this.context);\n  }\n\n  /**\n   * Sets a unit's booking price for range of days. Check-in is on the first day,\n   * check-out on the last.\n   * @param  {Address}          hotelAddress Hotel contract that controls the Unit contract to edit\n   * @param  {Address}          unitAddress  Unit contract to edit\n   * @param  {String|Number|BN} price        Lif 'ether' (converted to wei by web3.utils.toWei)\n   * @param  {Date}             fromDate     check-in date\n   * @param  {Number}           amountDays   integer number of days to book.\n   * @return {Promievent}\n   */\n  async setUnitSpecialLifPrice(hotelAddress, unitAddress, price, fromDate, amountDays){\n    const {\n      hotel,\n      index\n    } = await utils.getHotelAndIndex(hotelAddress, this.context);\n\n    const lifPrice = utils.lif2LifWei(price, this.context);\n    const fromDay = utils.formatDate(fromDate);\n    const unit = utils.getInstance('HotelUnit', unitAddress, this.context);\n\n    const unitData = unit.methods\n      .setSpecialLifPrice(lifPrice, fromDay, amountDays)\n      .encodeABI();\n\n    const hotelData = hotel.methods\n      .callUnit(unit.options.address, unitData)\n      .encodeABI();\n\n    return utils.execute(hotelData, index, this.context);\n  }\n};\n\nmodule.exports = HotelManager;\n",
    "static": true,
    "longname": "/Users/aklempner/Repos/WindingTree/libs-updated/wt-js-libs/libs/HotelManager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "utils",
    "memberof": "libs/HotelManager.js",
    "static": true,
    "longname": "libs/HotelManager.js~utils",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/HotelManager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "class",
    "name": "HotelManager",
    "memberof": "libs/HotelManager.js",
    "static": true,
    "longname": "libs/HotelManager.js~HotelManager",
    "access": "public",
    "export": true,
    "importPath": "wt-js-libs/libs/HotelManager.js",
    "importStyle": "HotelManager",
    "description": "Methods that allow a manager to create / administrate hotels",
    "examples": [
      "  const hotel = new HotelManager({\n    indexAddress: '0x75a3...b', // Address of the WTIndex contract that lists this hotel\n    owner: '0xab3...cd',        // Payer of lib tx fees, registered as owner the WTIndex\n    web3: web3,                 // Instantiated web3 object with its provider set.\n  });"
    ],
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 75,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#constructor",
    "access": "public",
    "description": "Instantiates a HotelManager with a web3 object, an owner account address, and the address of\nthe Index contract that has registered hotel assets.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "(see example above)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HotelManager"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "hotels",
    "memberof": "libs/HotelManager.js~HotelManager",
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#hotels",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "hotelsAddrs",
    "memberof": "libs/HotelManager.js~HotelManager",
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#hotelsAddrs",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "member",
    "name": "owner",
    "memberof": "libs/HotelManager.js~HotelManager",
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#owner",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "web3",
    "memberof": "libs/HotelManager.js~HotelManager",
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#web3",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "context",
    "memberof": "libs/HotelManager.js~HotelManager",
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#context",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "WTIndex",
    "memberof": "libs/HotelManager.js~HotelManager",
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#WTIndex",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "getHotel",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#getHotel",
    "access": "public",
    "description": "Gets non-bookings data for a Hotel contract (e.g info about its location, unit types\nand units).",
    "examples": [
      " (we should have a doc link to JSON output here)"
    ],
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "address of Hotel contract"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "getHotels",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#getHotels",
    "access": "public",
    "description": "Gets non-bookings data for all the hotels managed by the HotelManager (e.g info about their\nlocation, unit types and units).",
    "examples": [
      "(we should have a doc link to JSON output here)"
    ],
    "lineNumber": 54,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "getReservation",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#getReservation",
    "access": "public",
    "description": "Gets a unit's reservation data for a specific UTC day or date.",
    "examples": [
      "  const {\n    specialPrice,    // Price: 200.00\n    specialLifPrice, // LifPrice (ether): 20\n    bookedBy         // Address: e.g. '0x39a...2b'\n  } = await lib.getReservation('0xab3..cd', new Date('5/31/2020'));"
    ],
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "contract address of Unit"
      },
      {
        "nullable": null,
        "types": [
          "Date ",
          " Number"
        ],
        "spread": false,
        "optional": false,
        "name": "day",
        "description": "Date | UTC day since 1970"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "getCachedHotel",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#getCachedHotel",
    "access": "public",
    "description": "Gets the hotel data previously retrieved by a `getHotel` call",
    "examples": [
      "  (we should have a doc link to JSON output here)"
    ],
    "lineNumber": 109,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "hotelAddress",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "getCachedHotels",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#getCachedHotels",
    "access": "public",
    "description": "Gets hotel data previously retrieved by a `getHotels` call (see above)",
    "examples": [
      "  (we should have a doc link to JSON output here)"
    ],
    "lineNumber": 119,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "getCachedHotelsAddrs",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#getCachedHotelsAddrs",
    "access": "public",
    "description": "Gets the contract addresses of all hotels previously retrieved by a `getHotels` call",
    "examples": [
      " const [Hotel1, Hotel2] = lib.getHotelsAddrs();"
    ],
    "lineNumber": 129,
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "setWeb3",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#setWeb3",
    "access": "public",
    "description": "Sets the Hotel class's web3 instance.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "_web3",
        "description": "Web3 instance, already instantiated with a provider"
      }
    ],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "createHotel",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#createHotel",
    "access": "public",
    "description": "Creates a Hotel contract instance and registers it with the HotelManager's WTIndex contract",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "name"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "description"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "removeHotel",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#removeHotel",
    "access": "public",
    "description": "Removes a hotel from the WTIndex registry",
    "lineNumber": 172,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "address of Hotel contract to de-list"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "setRequireConfirmation",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#setRequireConfirmation",
    "access": "public",
    "description": "Sets a boolean flag in a Hotel contract that determines whether bookings\ncan happen instantly or require confirmation by a manager before they\nproceed.",
    "lineNumber": 201,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Contract address of the hotel to edit."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "t/f: require confirmation"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "changeHotelInfo",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#changeHotelInfo",
    "access": "public",
    "description": "Edits a hotel's name and description.",
    "lineNumber": 221,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "contract address"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "hotel name"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "hotel description"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "changeHotelAddress",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#changeHotelAddress",
    "access": "public",
    "description": "Edits a hotel's physical address data.",
    "lineNumber": 243,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "contract address"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "lineOne",
        "description": "physical address data"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "lineTwo",
        "description": "physical address data"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "zipCode",
        "description": "physical address data"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "country",
        "description": "physical address data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "changeHotelLocation",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#changeHotelLocation",
    "access": "public",
    "description": "Edits a hotel's coordinate location and timezone data.",
    "lineNumber": 264,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "contract address"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timezone",
        "description": "positive integer timezone relative to GMT"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "latitude",
        "description": "GPS latitude location data e.g `-3.703578`"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "longitude",
        "description": "GPS longitude location data e.g `40.426371`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "addImageHotel",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#addImageHotel",
    "access": "public",
    "description": "Adds an image to a hotel",
    "lineNumber": 285,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "contract address"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url of the image to add"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "removeImageHotel",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#removeImageHotel",
    "access": "public",
    "description": "Removes an image from a hotel",
    "lineNumber": 304,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "contract address"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "imageIndex",
        "description": "index of the image to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "confirmBooking",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#confirmBooking",
    "access": "public",
    "description": "Confirms a pending booking request. `reservationId` is the value of the `dataHash` field\nfrom the `CallStarted` event fired when a booking that requires confirmation is initiated.",
    "lineNumber": 324,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract address that controls unit requested"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "reservationId",
        "description": "data hash."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "addUnitType",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#addUnitType",
    "access": "public",
    "description": "Deploys a UnitType contract and registers it to an existing Hotel contract",
    "lineNumber": 343,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that will control created UnitType contract"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "unitType",
        "description": "unique plain text id of UnitType, ex: 'BASIC_ROOM'"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "removeUnitType",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#removeUnitType",
    "access": "public",
    "description": "Unregisters a UnitType contract from an existing Hotel contract",
    "lineNumber": 364,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the UnitType contract to remove"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "unitType",
        "description": "unique plain text id of UnitType, ex: 'BASIC_ROOM'"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "editUnitType",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#editUnitType",
    "access": "public",
    "description": "Edits a unit type's basic info data.",
    "lineNumber": 390,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the UnitType contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "unitType",
        "description": "unique plain text id of UnitType, ex: 'BASIC_ROOM'"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "description: e.g. 'Simple. Clean.'"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "minGuests",
        "description": "minimum number of guests that can stay in UnitType"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxGuests",
        "description": "maximum number of guests that can stay in UnitType"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "price",
        "description": "price of UnitType: e.g '50 euros'"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "addAmenity",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#addAmenity",
    "access": "public",
    "description": "Adds an amenity to a unit type",
    "lineNumber": 418,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the UnitType contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "unitType",
        "description": "unique plain text id of UnitType, ex: 'BASIC_ROOM'"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "amenity",
        "description": "integer code of amenity to add: ex: 23"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "removeAmenity",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#removeAmenity",
    "access": "public",
    "description": "Removes an amenity from a unit type.",
    "lineNumber": 446,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the UnitType contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "unitType",
        "description": "unique plain text id of UnitType, ex: 'BASIC_ROOM'"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "amenity",
        "description": "integer code of amenity to remove: ex: 23"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "addImageUnitType",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#addImageUnitType",
    "access": "public",
    "description": "Adds an image to a unit type",
    "lineNumber": 474,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the UnitType contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "unitType",
        "description": "unique plain text id of UnitType, ex: 'BASIC_ROOM'"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "url of the image to add"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "removeImageUnitType",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#removeImageUnitType",
    "access": "public",
    "description": "Removes an image to a unit type",
    "lineNumber": 502,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the UnitType contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "unitType",
        "description": "unique plain text id of UnitType, ex: 'BASIC_ROOM'"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "imageIndex",
        "description": "index of the image to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "addUnit",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#addUnit",
    "access": "public",
    "description": "Deploys a Unit contract and registers it to an existing Hotel contract",
    "lineNumber": 529,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that will control created Unit contract"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "unitType",
        "description": "unique plain text id of this units UnitType, ex: 'BASIC_ROOM'"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "removeUnit",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#removeUnit",
    "access": "public",
    "description": "Unregisters a Unit contract from an existing Hotel contract",
    "lineNumber": 550,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the Unit contract to remove"
      },
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "Unit contract to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "setUnitActive",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#setUnitActive",
    "access": "public",
    "description": "Sets a Unit contracts `active` status. This determines whether or not it can be booked.",
    "lineNumber": 569,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the Unit contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "Unit contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "active",
        "description": "Unit is locked when false."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "setDefaultPrice",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#setDefaultPrice",
    "access": "public",
    "description": "Sets the default price for a unit",
    "lineNumber": 595,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the Unit being edited"
      },
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "Unit contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "price",
        "description": "Integer or floating point price"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "setDefaultLifPrice",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#setDefaultLifPrice",
    "access": "public",
    "description": "Sets the default LifPrice for this unit",
    "lineNumber": 622,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the Unit contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "Unit contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Number",
          "BN"
        ],
        "spread": false,
        "optional": false,
        "name": "price",
        "description": "Lif 'ether' (converted to wei by web3.utils.toWei)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "setCurrencyCode",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#setCurrencyCode",
    "access": "public",
    "description": "Changes the default currency code",
    "lineNumber": 652,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the Unit being edited"
      },
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "Unit contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "code",
        "description": "Integer currency code btw 0 and 255"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "converter",
        "description": "ex `euro = kroneToEuro(krone)`"
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "convertStart",
        "description": "date to begin search of specialPrices"
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "convertEnd",
        "description": "date (inclusive) to end search of specialPrices"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "setUnitSpecialPrice",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#setUnitSpecialPrice",
    "access": "public",
    "description": "Sets a unit's national currency booking price for range of days. Check-in is on\nthe first day, check-out on the last.",
    "lineNumber": 687,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the Unit contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "Addres"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "Unit contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "price",
        "description": "integer or floating point price"
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "fromDate",
        "description": "check-in date"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "amountDays",
        "description": "integer number of days to book."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "setUnitSpecialLifPrice",
    "memberof": "libs/HotelManager.js~HotelManager",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/HotelManager.js~HotelManager#setUnitSpecialLifPrice",
    "access": "public",
    "description": "Sets a unit's booking price for range of days. Check-in is on the first day,\ncheck-out on the last.",
    "lineNumber": 719,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Hotel contract that controls the Unit contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "Unit contract to edit"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Number",
          "BN"
        ],
        "spread": false,
        "optional": false,
        "name": "price",
        "description": "Lif 'ether' (converted to wei by web3.utils.toWei)"
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "fromDate",
        "description": "check-in date"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "amountDays",
        "description": "integer number of days to book."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "libs/User.js",
    "content": "const utils = require('./utils/index');\nconst errors = require('./utils/errors');\nconst BookingData = require('./BookingData');\n\n/**\n * Methods that allow hotel clients to make bookings.\n * @example\n *   const user = new User({\n *     account: '0xabcd...123',       // Client's account address\n *     gasMargin: 1.24,               // Multiple to increase gasEstimate by to ensure tx success.\n *     tokenAddress: '0x123...abcd',  // LifToken contract address\n *     web3: web3                     // Web3 object instantiated with a provider\n *   })\n */\nclass User {\n\n  /**\n   * Instantiates a User with an Ethereum account address, a LifToken address, and a Web3 instance\n   * whose provider has been set.\n   * @param  {Object} options\n   * @return {User}\n   */\n  constructor(options){\n    this.context = {};\n    this.account = options.account || null;\n    this.context.web3 = options.web3;\n    this.context.gasMargin = options.gasMargin || 1;\n    this.token = utils.getInstance('LifToken', options.tokenAddress, this.context);\n    this.bookings = new BookingData(options.web3);\n  }\n\n  /**\n   * Private method that composes a non-token booking's data for execution by sendTransaction\n   */\n  async _compileBooking(hotelAddress, unitAddress, fromDay, daysAmount, guestData){\n    const hotel = utils.getInstance('Hotel', hotelAddress, this.context);\n\n    const bookData = await hotel.methods\n      .book(unitAddress, this.account, fromDay, daysAmount)\n      .encodeABI();\n\n    return await hotel.methods\n      .beginCall(bookData, guestData)\n      .encodeABI();\n  }\n\n  /**\n   * Private method that composes a token based booking's data for execution by sendTransaction\n   */\n  async _compileLifBooking(hotelAddress, unitAddress, fromDay, daysAmount, guestData){\n    const hotel = utils.getInstance('Hotel', hotelAddress, this.context);\n\n    const bookData = await hotel.methods\n      .bookWithLif(unitAddress, this.account, fromDay, daysAmount)\n      .encodeABI();\n\n    return await hotel.methods\n      .beginCall(bookData, guestData)\n      .encodeABI();\n  }\n\n\n  /**\n   * Initiates a token-payment booking\n   * @param  {Address}    hotelAddress  Address of Hotel contract that controls the unit to book\n   * @param  {Address}    unitAddress   Address of Unit contract being booked\n   * @param  {Date}       fromDate      check in date\n   * @param  {Number}     daysAmount    number of days to book\n   * @param  {String}     guestData     guest data\n   * @return {Promievent}\n   */\n  async bookWithLif(hotelAddress, unitAddress, fromDate, daysAmount, guestData) {\n    const fromDay = utils.formatDate(fromDate);\n\n    const cost = await this.bookings.getLifCost(unitAddress, fromDay, daysAmount);\n    const enough = await this.balanceCheck(cost);\n    const available = await this.bookings.unitIsAvailable(unitAddress, fromDate, daysAmount);\n    const guestDataHex = this.context.web3.utils.toHex(guestData);\n\n    if (!enough)\n      return Promise.reject(errors.insufficientBalance);\n\n    if (!available)\n      return Promise.reject(errors.notAvailable);\n\n    const bookData = await this._compileLifBooking(\n      hotelAddress,\n      unitAddress,\n      fromDay,\n      daysAmount,\n      guestDataHex\n    );\n\n    const weiCost = utils.lif2LifWei(cost, this.context);\n    const approvalData = await this.token.methods\n      .approveData(hotelAddress, weiCost, bookData)\n      .encodeABI();\n\n    const options = {\n      from: this.account,\n      to: this.token.options.address,\n      data: approvalData\n    };\n\n    const estimate = await this.context.web3.eth.estimateGas(options);\n    options.gas = await utils.addGasMargin(estimate, this.context);\n\n    return this.context.web3.eth.sendTransaction(options);\n  };\n\n  /**\n   * Initiates a non-token booking\n   * @param  {Address}    hotelAddress  Address of Hotel contract that controls the unit to book\n   * @param  {Address}    unitAddress   Address of Unit contract being booked\n   * @param  {Date}       fromDate      check in date\n   * @param  {Number}     daysAmount    number of days to book\n   * @param  {String}     guestData     hex encoded guest data\n   * @return {Promievent}\n   */\n  async book(hotelAddress, unitAddress, fromDate, daysAmount, guestData){\n    const fromDay = utils.formatDate(fromDate);\n    const guestDataHex = this.context.web3.utils.toHex(guestData);\n\n    const data = await this._compileBooking(\n      hotelAddress,\n      unitAddress,\n      fromDay,\n      daysAmount,\n      guestDataHex\n    );\n\n    const options = {\n      from: this.account,\n      to: hotelAddress,\n      data: data\n    };\n\n    const estimate = await this.context.web3.eth.estimateGas(options);\n    options.gas = await utils.addGasMargin(estimate, this.context);\n\n    return this.context.web3.eth.sendTransaction(options);\n  }\n\n  /**\n   * Returns true if user account's LifToken balance is greater than or equal to\n   * a booking's LifToken cost.\n   * @param  {Number}  cost    Lif 'ether'\n   * @return {Boolean}\n   */\n  async balanceCheck(cost){\n    let weiCost = utils.lif2LifWei(cost, this.context);\n    weiCost = new this.context.web3.utils.BN(weiCost);\n\n    let balance = await this.token.methods.balanceOf(this.account).call();\n    balance = new this.context.web3.utils.BN(balance);\n\n    return balance.gte(weiCost);\n  }\n}\n\nmodule.exports = User;\n\n",
    "static": true,
    "longname": "/Users/aklempner/Repos/WindingTree/libs-updated/wt-js-libs/libs/User.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "variable",
    "name": "utils",
    "memberof": "libs/User.js",
    "static": true,
    "longname": "libs/User.js~utils",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/User.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "errors",
    "memberof": "libs/User.js",
    "static": true,
    "longname": "libs/User.js~errors",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/User.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "name": "BookingData",
    "memberof": "libs/User.js",
    "static": true,
    "longname": "libs/User.js~BookingData",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/User.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "class",
    "name": "User",
    "memberof": "libs/User.js",
    "static": true,
    "longname": "libs/User.js~User",
    "access": "public",
    "export": true,
    "importPath": "wt-js-libs/libs/User.js",
    "importStyle": "User",
    "description": "Methods that allow hotel clients to make bookings.",
    "examples": [
      "  const user = new User({\n    account: '0xabcd...123',       // Client's account address\n    gasMargin: 1.24,               // Multiple to increase gasEstimate by to ensure tx success.\n    tokenAddress: '0x123...abcd',  // LifToken contract address\n    web3: web3                     // Web3 object instantiated with a provider\n  })"
    ],
    "lineNumber": 15,
    "interface": false
  },
  {
    "__docId__": 122,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "libs/User.js~User",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "libs/User.js~User#constructor",
    "access": "public",
    "description": "Instantiates a User with an Ethereum account address, a LifToken address, and a Web3 instance\nwhose provider has been set.",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "User"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "context",
    "memberof": "libs/User.js~User",
    "static": false,
    "longname": "libs/User.js~User#context",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "account",
    "memberof": "libs/User.js~User",
    "static": false,
    "longname": "libs/User.js~User#account",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "token",
    "memberof": "libs/User.js~User",
    "static": false,
    "longname": "libs/User.js~User#token",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "bookings",
    "memberof": "libs/User.js~User",
    "static": false,
    "longname": "libs/User.js~User#bookings",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "_compileBooking",
    "memberof": "libs/User.js~User",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/User.js~User#_compileBooking",
    "access": "private",
    "description": "Private method that composes a non-token booking's data for execution by sendTransaction",
    "lineNumber": 35,
    "params": [
      {
        "name": "hotelAddress",
        "types": [
          "*"
        ]
      },
      {
        "name": "unitAddress",
        "types": [
          "*"
        ]
      },
      {
        "name": "fromDay",
        "types": [
          "*"
        ]
      },
      {
        "name": "daysAmount",
        "types": [
          "*"
        ]
      },
      {
        "name": "guestData",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "_compileLifBooking",
    "memberof": "libs/User.js~User",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/User.js~User#_compileLifBooking",
    "access": "private",
    "description": "Private method that composes a token based booking's data for execution by sendTransaction",
    "lineNumber": 50,
    "params": [
      {
        "name": "hotelAddress",
        "types": [
          "*"
        ]
      },
      {
        "name": "unitAddress",
        "types": [
          "*"
        ]
      },
      {
        "name": "fromDay",
        "types": [
          "*"
        ]
      },
      {
        "name": "daysAmount",
        "types": [
          "*"
        ]
      },
      {
        "name": "guestData",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "bookWithLif",
    "memberof": "libs/User.js~User",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/User.js~User#bookWithLif",
    "access": "public",
    "description": "Initiates a token-payment booking",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Address of Hotel contract that controls the unit to book"
      },
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "Address of Unit contract being booked"
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "fromDate",
        "description": "check in date"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "daysAmount",
        "description": "number of days to book"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "guestData",
        "description": "guest data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "book",
    "memberof": "libs/User.js~User",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/User.js~User#book",
    "access": "public",
    "description": "Initiates a non-token booking",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "Address of Hotel contract that controls the unit to book"
      },
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "unitAddress",
        "description": "Address of Unit contract being booked"
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "fromDate",
        "description": "check in date"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "daysAmount",
        "description": "number of days to book"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "guestData",
        "description": "hex encoded guest data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "balanceCheck",
    "memberof": "libs/User.js~User",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "libs/User.js~User#balanceCheck",
    "access": "public",
    "description": "Returns true if user account's LifToken balance is greater than or equal to\na booking's LifToken cost.",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "cost",
        "description": "Lif 'ether'"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "libs/utils/errors.js",
    "content": "/**\n * Errors that a validator can consume, localized here so we can standardize their format\n * @type {Object}\n */\nmodule.exports = {\n  insufficientBalance: 'Token balance was too low to attempt this booking.',\n  notAvailable:        'Unit is not available for the requested dates'\n}\n\n",
    "static": true,
    "longname": "/Users/aklempner/Repos/WindingTree/libs-updated/wt-js-libs/libs/utils/errors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "libs/utils/hotel.js",
    "content": "const {\n  abis,\n  binaries,\n  getInstance,\n  isZeroAddress,\n  isZeroBytes8,\n  isZeroBytes32,\n  isZeroUint,\n  isZeroString,\n  bytes32ToString,\n  bnToPrice,\n  lifWei2Lif,\n  locationFromUint,\n  addGasMargin,\n  jsArrayFromSolidityArray,\n  pretty,\n} = require('./misc')\n\n\n/**\n * Takes bundled data for a hotel call and executes it through the WTIndex callHotel method.\n * @param  {String} data    hex string: output of `instance.method.xyz().encodeABI()`\n * @param  {Number} index   position of hotel in the WTIndex registry\n * @param  {Object} context Hotel class context\n * @return {Promievent}\n */\nasync function execute(data, index, context){\n  const callData = await context.WTIndex.methods\n    .callHotel(index, data)\n    .encodeABI();\n\n  const options = {\n    from: context.owner,\n    to: context.WTIndex.options.address,\n    data: callData\n  };\n\n  const estimate = await context.web3.eth.estimateGas(options);\n  options.gas = await addGasMargin(estimate, context);\n\n  return context.web3.eth.sendTransaction(options);\n}\n\n/**\n * Deploys an Index contract that functions as a registry and transaction entry\n * point for the contract system's Hotels.\n * system's Hotels\n * @param  {Object}  context  ex: context.web3 / context.owner\n * @return {Instance}         WTIndex instance\n */\nasync function deployIndex(context){\n  const abi = abis['WTIndex'];\n  const instance = new context.web3.eth.Contract(abi);\n\n  const deployOptions = {\n    data: binaries['WTIndex'],\n    arguments: []\n  };\n\n  const tx = await deployContract(instance, deployOptions, context);\n  return getInstance('WTIndex', tx.contractAddress, context);\n}\n\n/**\n * Deploys a Unit contract which will subsequently be added to a Hotel's list of units\n * @param  {String}  unitType     name of this unit's UnitType, ex: `BASIC_ROOM`\n * @param  {Address} hotelAddress address of the Hotel instance that will own this contract\n * @param  {Object}  context      ex: context.web3 / context.owner\n * @return {Promievent}           web3 deployment result\n */\nasync function deployUnit(unitType, hotelAddress, context){\n  const typeHex = context.web3.utils.toHex(unitType);\n  const abi = abis['HotelUnit'];\n  const instance = new context.web3.eth.Contract(abi);\n\n  const deployOptions = {\n    data: binaries['HotelUnit'],\n    arguments: [hotelAddress, typeHex]\n  };\n\n  const tx = await deployContract(instance, deployOptions, context);\n  return getInstance('HotelUnitType', tx.contractAddress, context);\n}\n\n/**\n * Deploys a UnitType contract which will subsequently be added to a Hotel's list of unit types\n * @param  {String}  unitType     name of UnitType, ex: `BASIC_ROOM`\n * @param  {Address} hotelAddress address of the Hotel instance that will own this contract\n * @param  {Object}  context      ex: context.web3 / context.owner\n * @return {Instance}             UnitType contract instance\n */\nasync function deployUnitType(unitType, hotelAddress, context){\n  const typeHex = context.web3.utils.toHex(unitType);\n  const abi = abis['HotelUnitType'];\n  const instance = await new context.web3.eth.Contract(abi);\n\n  const deployOptions = {\n    data: binaries['HotelUnitType'],\n    arguments: [hotelAddress, typeHex]\n  };\n\n  const tx = await deployContract(instance, deployOptions, context);\n  return getInstance('HotelUnitType', tx.contractAddress, context);\n}\n\n/**\n * Deploys an arbitary contract\n * @param  {Instance} instance      web3 1.0 contract instance\n * @param  {Object}   deployOptions options passed the web3 deployment method\n * @param  {Object}   context       Hotel class context\n * @return {Promievent}\n */\nasync function deployContract(instance, deployOptions, context){\n  const data = await instance\n    .deploy(deployOptions)\n    .encodeABI();\n\n  const options = {\n    from: context.owner,\n    data: data\n  };\n\n  const estimate = await context.web3.eth.estimateGas(options);\n  options.gas = await addGasMargin(estimate, context);\n\n  return context.web3.eth.sendTransaction(options);\n}\n\n/**\n * Async method that gets the index of a unit type the user intends to remove\n * @param  {Instance} hotel    Hotel\n * @param  {String}   unitType ex: 'BASIC_ROOM'\n * @param  {Object}   context  ex: context.web3\n * @return {Number}\n */\nasync function getUnitTypeIndex(hotel, unitType, context){\n  const typeHex = context.web3.utils.toHex(unitType);\n  const typeBytes32 = context.web3.utils.padRight(typeHex, 64);\n  const typeNames = await hotel.methods.getUnitTypeNames().call();\n  return typeNames.indexOf(typeBytes32);\n}\n\n/**\n * Async method that gets a hotel instance and its index number in the WTIndex parent contract\n * @param  {Address}  address  contract address of Hotel instance\n * @param  {Object}   context  {WTIndex: <Instance>, owner: <address>, web3: <web3>}\n * @return {Promise}  { hotel: <instance>, index: <number> }\n */\nasync function getHotelAndIndex(address, context){\n  const methods = context.WTIndex.methods;\n  const owner = context.owner;\n\n  const addresses = await methods.getHotelsByManager(owner).call();\n  const index = await addresses.indexOf(address);\n  const hotel = getInstance('Hotel', address, context);\n  return {\n    hotel: hotel,\n    index: index\n  }\n}\n\n/**\n * Async method which gets all info associated with hotel, its unit types and units. Zero\n * elements in the solidity arrays are filtered out and data types are converted from\n * their solidity form to JS, i.e. bytes32 --> utf8.\n * @param  {Instance} wtHotel   Hotel contract instance\n * @param  {Object}   context   `{WTIndex: <Instance>, owner: <address>, web3: <web3>}`\n * @return {Object}   data\n */\nasync function getHotelInfo(wtHotel, context){\n\n  // UnitTypes & Amenities\n  const unitTypes = {};\n  let unitTypeNames = await wtHotel.methods.getUnitTypeNames().call();\n  unitTypeNames = unitTypeNames.filter(name => !isZeroBytes32(name))\n\n  if (unitTypeNames.length){\n    for (let typeName of unitTypeNames){\n      const unitType = await wtHotel.methods.getUnitType(typeName).call();\n      const instance = getInstance('HotelUnitType', unitType, context);\n\n      const name = context.web3.utils.toUtf8(typeName);\n      unitTypes[name] = {};\n      unitTypes[name].address = instance._address;\n\n      // UnitType Amenities\n      const amenities = await instance.methods.getAmenities().call();\n      unitTypes[name].amenities = amenities.filter(item => !isZeroUint(item))\n                                           .map(item => parseInt(item));\n\n      const info = await instance.methods.getInfo().call();\n\n      unitTypes[name].info = {\n        description: isZeroString(info[0]) ? null : info[0],\n        minGuests: isZeroUint(info[1]) ? null : parseInt(info[1]),\n        maxGuests: isZeroUint(info[2]) ? null : parseInt(info[2]),\n        price: isZeroString(info[3]) ? null : info[3],\n      }\n\n      // UnitType Images\n      const length = await instance.methods.getImagesLength().call();\n      const images = await jsArrayFromSolidityArray(\n        instance.methods.images,\n        parseInt(length),\n        isZeroString\n      );\n      unitTypes[name].images = images.filter(item => !isZeroString(item));\n    };\n  }\n\n  // Hotel Images\n  const imagesLength = await wtHotel.methods.getImagesLength().call();\n  const images = await jsArrayFromSolidityArray(\n    wtHotel.methods.images,\n    parseInt(imagesLength),\n    isZeroString\n  );\n\n  // Hotel Units\n  const units = {};\n  const unitsLength = await wtHotel.methods.getUnitsLength().call();\n  const unitAddresses = await jsArrayFromSolidityArray(\n    wtHotel.methods.units,\n    parseInt(unitsLength),\n    isZeroAddress\n  );\n\n  if(unitAddresses.length){\n    for (let address of unitAddresses){\n      const instance = getInstance('HotelUnit', address, context);\n      units[address] = {};\n      units[address].active = await instance.methods.active().call();\n\n      const unitType = await instance.methods.unitType().call();\n      units[address].unitType = bytes32ToString(unitType);\n\n      const code = await instance.methods.currencyCode().call();\n      units[address].currencyCode = isZeroBytes8(code) ? null : context.web3.utils.hexToNumber(code);\n\n      const defaultPrice = await instance.methods.defaultPrice().call();\n      units[address].defaultPrice = isZeroUint(defaultPrice) ? null : bnToPrice(defaultPrice);\n\n      let lifWei = await instance.methods.defaultLifPrice().call();\n      lifWei = lifWei2Lif(lifWei, context);\n      units[address].defaultLifPrice = isZeroUint(lifWei) ? null : parseInt(lifWei);\n    }\n  }\n\n  // Hotel Info\n  const name =             await wtHotel.methods.name().call();\n  const description =      await wtHotel.methods.description().call();\n  const manager =          await wtHotel.methods.manager().call();\n  const lineOne =          await wtHotel.methods.lineOne().call();\n  const lineTwo =          await wtHotel.methods.lineTwo().call();\n  const zip =              await wtHotel.methods.zip().call();\n  const country =          await wtHotel.methods.country().call();\n  const created =          await wtHotel.methods.created().call();\n  const timezone =         await wtHotel.methods.timezone().call();\n  const latitude =         await wtHotel.methods.latitude().call();\n  const longitude =        await wtHotel.methods.longitude().call();\n  const waitConfirmation = await wtHotel.methods.waitConfirmation().call();\n\n  return {\n    name: isZeroString(name) ? null : name,\n    description: isZeroString(description) ? null : description,\n    manager: isZeroAddress(manager) ? null : manager,\n    lineOne : isZeroString(lineOne) ? null : lineOne,\n    lineTwo : isZeroString(lineTwo) ? null : lineTwo,\n    zip : isZeroString(zip) ? null : zip,\n    country : isZeroString(country) ? null : country,\n    created: isZeroUint(created) ? null : parseInt(created),\n    timezone : isZeroUint(timezone) ? null : parseInt(timezone),\n    latitude : isZeroUint(latitude) ? null : locationFromUint(longitude, latitude).lat,\n    longitude : isZeroUint(longitude) ? null : locationFromUint(longitude, latitude).long,\n    waitConfirmation: waitConfirmation,\n    images: images,\n    unitTypeNames: unitTypeNames.map(name => bytes32ToString(name)),\n    unitTypes: unitTypes,\n    units: units,\n    unitAddresses: unitAddresses\n  }\n}\n\nmodule.exports = {\n  execute: execute,\n  deployIndex: deployIndex,\n  deployUnitType: deployUnitType,\n  deployUnit: deployUnit,\n  getHotelAndIndex: getHotelAndIndex,\n  getHotelInfo: getHotelInfo,\n  getUnitTypeIndex: getUnitTypeIndex,\n}\n",
    "static": true,
    "longname": "/Users/aklempner/Repos/WindingTree/libs-updated/wt-js-libs/libs/utils/hotel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "abis",
    "memberof": "libs/utils/hotel.js",
    "static": true,
    "longname": "libs/utils/hotel.js~abis",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/hotel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "execute",
    "memberof": "libs/utils/hotel.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "libs/utils/hotel.js~execute",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/hotel.js",
    "importStyle": null,
    "description": "Takes bundled data for a hotel call and executes it through the WTIndex callHotel method.",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "hex string: output of `instance.method.xyz().encodeABI()`"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "position of hotel in the WTIndex registry"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Hotel class context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "function",
    "name": "deployIndex",
    "memberof": "libs/utils/hotel.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "libs/utils/hotel.js~deployIndex",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/hotel.js",
    "importStyle": null,
    "description": "Deploys an Index contract that functions as a registry and transaction entry\npoint for the contract system's Hotels.\nsystem's Hotels",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "ex: context.web3 / context.owner"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Instance"
      ],
      "spread": false,
      "description": "WTIndex instance"
    },
    "ignore": true
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "deployUnit",
    "memberof": "libs/utils/hotel.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "libs/utils/hotel.js~deployUnit",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/hotel.js",
    "importStyle": null,
    "description": "Deploys a Unit contract which will subsequently be added to a Hotel's list of units",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "unitType",
        "description": "name of this unit's UnitType, ex: `BASIC_ROOM`"
      },
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "address of the Hotel instance that will own this contract"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "ex: context.web3 / context.owner"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": "web3 deployment result"
    },
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "deployUnitType",
    "memberof": "libs/utils/hotel.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "libs/utils/hotel.js~deployUnitType",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/hotel.js",
    "importStyle": null,
    "description": "Deploys a UnitType contract which will subsequently be added to a Hotel's list of unit types",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "unitType",
        "description": "name of UnitType, ex: `BASIC_ROOM`"
      },
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "hotelAddress",
        "description": "address of the Hotel instance that will own this contract"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "ex: context.web3 / context.owner"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Instance"
      ],
      "spread": false,
      "description": "UnitType contract instance"
    },
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "deployContract",
    "memberof": "libs/utils/hotel.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "libs/utils/hotel.js~deployContract",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/hotel.js",
    "importStyle": null,
    "description": "Deploys an arbitary contract",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "instance",
        "description": "web3 1.0 contract instance"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "deployOptions",
        "description": "options passed the web3 deployment method"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Hotel class context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promievent"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "getUnitTypeIndex",
    "memberof": "libs/utils/hotel.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "libs/utils/hotel.js~getUnitTypeIndex",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/hotel.js",
    "importStyle": null,
    "description": "Async method that gets the index of a unit type the user intends to remove",
    "lineNumber": 136,
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "hotel",
        "description": "Hotel"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "unitType",
        "description": "ex: 'BASIC_ROOM'"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "ex: context.web3"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "getHotelAndIndex",
    "memberof": "libs/utils/hotel.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "libs/utils/hotel.js~getHotelAndIndex",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/hotel.js",
    "importStyle": null,
    "description": "Async method that gets a hotel instance and its index number in the WTIndex parent contract",
    "lineNumber": 149,
    "params": [
      {
        "nullable": null,
        "types": [
          "Address"
        ],
        "spread": false,
        "optional": false,
        "name": "address",
        "description": "contract address of Hotel instance"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "{WTIndex: <Instance>, owner: <address>, web3: <web3>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "{ hotel: <instance>, index: <number> }"
    },
    "ignore": true
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "getHotelInfo",
    "memberof": "libs/utils/hotel.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "libs/utils/hotel.js~getHotelInfo",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/hotel.js",
    "importStyle": null,
    "description": "Async method which gets all info associated with hotel, its unit types and units. Zero\nelements in the solidity arrays are filtered out and data types are converted from\ntheir solidity form to JS, i.e. bytes32 --> utf8.",
    "lineNumber": 170,
    "params": [
      {
        "nullable": null,
        "types": [
          "Instance"
        ],
        "spread": false,
        "optional": false,
        "name": "wtHotel",
        "description": "Hotel contract instance"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "`{WTIndex: <Instance>, owner: <address>, web3: <web3>}`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "data"
    },
    "ignore": true
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "libs/utils/index.js",
    "content": "const hotel = require('./hotel.js');\nconst misc = require('./misc.js');\n\nmodule.exports = {\n\n  // Hotel\n  execute: hotel.execute,\n  deployIndex: hotel.deployIndex,\n  deployUnitType: hotel.deployUnitType,\n  deployUnit: hotel.deployUnit,\n  getHotelInfo: hotel.getHotelInfo,\n  getHotelAndIndex: hotel.getHotelAndIndex,\n  getUnitTypeIndex: hotel.getUnitTypeIndex,\n\n\n  // Misc\n  abis: misc.abis,\n  abiDecoder: misc.abiDecoder,\n  parseDate: misc.parseDate,\n  formatDate: misc.formatDate,\n  isZeroBytes8: misc.isZeroBytes8,\n  isZeroBytes32: misc.isZeroBytes32,\n  isZeroAddress: misc.isZeroAddress,\n  isZeroString: misc.isZeroString,\n  isZeroUint: misc.isZeroUint,\n  isInvalidOpcodeEx: misc.isInvalidOpcodeEx,\n  lifWei2Lif: misc.lifWei2Lif,\n  lif2LifWei: misc.lif2LifWei,\n  currencyCodeToHex: misc.currencyCodeToHex,\n  bytes32ToString: misc.bytes32ToString,\n  priceToUint: misc.priceToUint,\n  bnToPrice: misc.bnToPrice,\n  locationToUint: misc.locationToUint,\n  locationFromUint: misc.locationFromUint,\n  getLifGuestData: misc.getLifGuestData,\n  getGuestData: misc.getGuestData,\n  addGasMargin: misc.addGasMargin,\n  getInstance: misc.getInstance,\n  fundAccount: misc.fundAccount,\n  jsArrayFromSolidityArray: misc.jsArrayFromSolidityArray,\n  pretty: misc.pretty\n}\n",
    "static": true,
    "longname": "/Users/aklempner/Repos/WindingTree/libs-updated/wt-js-libs/libs/utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "hotel",
    "memberof": "libs/utils/index.js",
    "static": true,
    "longname": "libs/utils/index.js~hotel",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "misc",
    "memberof": "libs/utils/index.js",
    "static": true,
    "longname": "libs/utils/index.js~misc",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "file",
    "name": "libs/utils/misc.js",
    "content": "const utf8 = require('utf8');\n\nconst WTIndexContract = require('../../build/contracts/WTIndex.json');\nconst HotelContract = require('../../build/contracts/Hotel.json');\nconst UnitTypeContract = require('../../build/contracts/UnitType.json');\nconst UnitContract = require('../../build/contracts/Unit.json');\nconst AsyncCallContract = require('../../build/contracts/AsyncCall.json');\nconst LifTokenContract = require('../../build/contracts/LifToken.json');\n\nconst abiDecoder = require('abi-decoder');\nconst moment = require('moment');\nconst print = JSON.stringify;\n\n// -------------------------- ABI Decoder / ABI Tables / Binaries ----------------------------------\n\nabiDecoder.addABI(AsyncCallContract.abi);\nabiDecoder.addABI(LifTokenContract.abi);\nabiDecoder.addABI(HotelContract.abi);\nabiDecoder.addABI(WTIndexContract.abi);\nabiDecoder.addABI(UnitTypeContract.abi);\nabiDecoder.addABI(UnitContract.abi);\n\nconst abis = {\n  WTIndex: WTIndexContract.abi,\n  Hotel: HotelContract.abi,\n  LifToken: LifTokenContract.abi,\n  HotelUnit: UnitContract.abi,\n  HotelUnitType: UnitTypeContract.abi\n};\n\nconst binaries = {\n  WTIndex: WTIndexContract.bytecode,\n  Hotel: HotelContract.bytecode,\n  LifToken: LifTokenContract.bytecode,\n  HotelUnit: UnitContract.bytecode,\n  HotelUnitType: UnitTypeContract.bytecode\n}\n\n// --------------------------- Constants / Converters / Type Helpers -------------------------------\n\nconst testnetId = 77;\nconst defaultGas = 4700000;\nconst zeroBytes8 = '0x0000000000000000';\nconst zeroAddress = '0x0000000000000000000000000000000000000000';\nconst zeroBytes32 = '0x0000000000000000000000000000000000000000000000000000000000000000';\n\n\n// Returns the date from a single integer in format DD/MM/YYYY\nfunction parseDate(date){\n  return moment([1970, 0, 1]).add(date, 'days').toDate();\n};\n\n// Returns the date formatted in days since 1970 0 1\nfunction formatDate(date){\n  return Math.round(new Date(date).getTime()/86400000);\n};\n\n\nfunction isZeroBytes8(val){\n  return val === zeroBytes8;\n}\n\nfunction isZeroBytes32(val){\n  return val === zeroBytes32;\n};\n\nfunction isZeroAddress(val){\n  return val === zeroAddress;\n};\n\nfunction isZeroString(val){\n  return (val.length) ? false : true;\n};\n\nfunction isZeroUint(val){\n  return parseInt(val) === 0;\n};\n\nfunction isInvalidOpcodeEx(e) {\n  return e.message.search('invalid opcode') >= 0;\n};\n\nfunction currencyCodeToHex(code, context){\n  if (typeof code !== 'number')\n    throw new Error();\n\n  const hex = context.web3.utils.toHex(code);\n  return context.web3.utils.padLeft(hex, 16);\n}\n\nfunction priceToUint(price){\n  return price.toFixed(2) * 100;\n}\n\nfunction bnToPrice(uint){\n  uint = (typeof uint === 'Object') ? uint.toNumber() : uint;\n  return (uint/100).toFixed(2);\n}\n\nfunction lifWei2Lif(value, context){\n  return context.web3.utils.fromWei(value, 'ether');\n};\n\nfunction lif2LifWei(value, context){\n  return context.web3.utils.toWei(''+value, 'ether');\n};\n\nfunction locationToUint(longitude, latitude){\n  return {\n    long : Math.round((90 + longitude) * 10e5),\n    lat: Math.round((180 + latitude) * 10e5),\n  }\n};\n\nfunction locationFromUint(longitude, latitude){\n  latitude = parseInt(latitude);\n  longitude = parseInt(longitude);\n  return {\n    lat: parseFloat((latitude - (180 * 10e5)) / 10e5).toFixed(6),\n    long: parseFloat((longitude - (90 * 10e5)) / 10e5).toFixed(6)\n  }\n};\n\nfunction bytes32ToString(hex){\n  var str = \"\";\n  var i = 0, l = hex.length;\n  if (hex.substring(0, 2) === '0x') {\n      i = 2;\n  }\n  for (; i < l; i+=2) {\n      var code = parseInt(hex.substr(i, 2), 16);\n      if (code === 0)\n          break;\n      str += String.fromCharCode(code);\n  }\n\n  return utf8.decode(str);\n};\n\n//----------------------------------------- Web3 Helpers -------------------------------------------\n\n/**\n * Extracts the guest data from an instant payment Booking initiated by\n * a `token.approveData` transaction.\n * @param  {String} hash    transaction hash, available on the `CallStarted` event\n * @param  {Object} context execution context of the class ()\n * @return {String}      plain text guest data. If this is JSON it will need to be parsed.\n */\nasync function getGuestData(hash, context){\n  let guestData;\n  let tx = await context.web3.eth.getTransaction(hash);\n  let method = abiDecoder.decodeMethod(tx.input);\n\n  if (method.name === 'approveData'){\n    const paramData = method.params.filter(call => call.name === 'data')[0].value;\n    method = abiDecoder.decodeMethod(paramData);\n  }\n\n  guestData = method.params.filter(call => call.name === 'privateData')[0].value;\n  return context.web3.utils.toUtf8(guestData);\n}\n\nasync function addGasMargin(gas, context){\n  const id = await context.web3.eth.net.getId();\n  return (id === testnetId)\n    ? defaultGas\n    : Math.round(gas * context.gasMargin);\n}\n\nfunction getInstance(name, address, context){\n  const abi = abis[name];\n  const contract = new context.web3.eth.Contract(abi, address);\n  contract.setProvider(context.web3.currentProvider);\n  return contract;\n};\n\nasync function fundAccount(from, to, amount, _web3){\n  return _web3.eth.sendTransaction({\n    from: from,\n    to: to,\n    value: _web3.utils.toWei(amount, 'ether')\n  });\n};\n\n/**\n * Traverses a solidity array and returns an array of all its non-zero elements\n * @param {Function} getAtIndex reference to a getter method (e.g. getImage)\n * @param {Number}   length solidity array's length\n * @param {Function} zeroComparator e.g isZeroAddress\n * @return {Promise} Array\n */\nasync function jsArrayFromSolidityArray(getAtIndex, length, zeroComparator){\n  const arr = [];\n\n  for (let i = 0; i < length; i++){\n    let item = await getAtIndex(i).call();\n    arr.push(item)\n  };\n\n  return (zeroComparator !== undefined)\n    ? arr.filter(item => !zeroComparator(item))\n    : arr;\n}\n\n// Debugging helper\nfunction pretty(msg, obj) {\n  console.log(`<------ ${msg} ------>\\n${print(obj, null, ' ')}\\n`)\n}\n\nmodule.exports = {\n\n  // Contract assets\n  abis: abis,\n  abiDecoder: abiDecoder,\n  binaries: binaries,\n\n  // Constants & Converters\n  parseDate: parseDate,\n  formatDate: formatDate,\n  zeroAddress: zeroAddress,\n  zeroBytes8: zeroBytes8,\n  zeroBytes32: zeroBytes32,\n  isZeroBytes8: isZeroBytes8,\n  isZeroBytes32: isZeroBytes32,\n  isZeroAddress: isZeroAddress,\n  isZeroString: isZeroString,\n  isZeroUint: isZeroUint,\n  isInvalidOpcodeEx: isInvalidOpcodeEx,\n  lifWei2Lif: lifWei2Lif,\n  lif2LifWei: lif2LifWei,\n  currencyCodeToHex: currencyCodeToHex,\n  priceToUint: priceToUint,\n  bnToPrice: bnToPrice,\n  bytes32ToString: bytes32ToString,\n  locationToUint: locationToUint,\n  locationFromUint: locationFromUint,\n\n  // Web3 helpers\n  getGuestData: getGuestData,\n  addGasMargin: addGasMargin,\n  getInstance: getInstance,\n  fundAccount: fundAccount,\n  jsArrayFromSolidityArray: jsArrayFromSolidityArray,\n\n  // Debugging\n  pretty: pretty\n}\n",
    "static": true,
    "longname": "/Users/aklempner/Repos/WindingTree/libs-updated/wt-js-libs/libs/utils/misc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "name": "utf8",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~utf8",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "WTIndexContract",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~WTIndexContract",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 149,
    "kind": "variable",
    "name": "HotelContract",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~HotelContract",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "UnitTypeContract",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~UnitTypeContract",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "name": "UnitContract",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~UnitContract",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "AsyncCallContract",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~AsyncCallContract",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "LifTokenContract",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~LifTokenContract",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "abiDecoder",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~abiDecoder",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "moment",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~moment",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "print",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~print",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "abis",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~abis",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "{\"WTIndex\": *, \"Hotel\": *, \"LifToken\": *, \"HotelUnit\": *, \"HotelUnitType\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "binaries",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~binaries",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "{\"WTIndex\": *, \"Hotel\": *, \"LifToken\": *, \"HotelUnit\": *, \"HotelUnitType\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "testnetId",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~testnetId",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "variable",
    "name": "defaultGas",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~defaultGas",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 161,
    "kind": "variable",
    "name": "zeroBytes8",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~zeroBytes8",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 162,
    "kind": "variable",
    "name": "zeroAddress",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~zeroAddress",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 163,
    "kind": "variable",
    "name": "zeroBytes32",
    "memberof": "libs/utils/misc.js",
    "static": true,
    "longname": "libs/utils/misc.js~zeroBytes32",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 164,
    "kind": "function",
    "name": "parseDate",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~parseDate",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "date",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "formatDate",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~formatDate",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [
      {
        "name": "date",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 166,
    "kind": "function",
    "name": "isZeroBytes8",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~isZeroBytes8",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "isZeroBytes32",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~isZeroBytes32",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "function",
    "name": "isZeroAddress",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~isZeroAddress",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "isZeroString",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~isZeroString",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "function",
    "name": "isZeroUint",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~isZeroUint",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "isInvalidOpcodeEx",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~isInvalidOpcodeEx",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "currencyCodeToHex",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~currencyCodeToHex",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [
      {
        "name": "code",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 173,
    "kind": "function",
    "name": "priceToUint",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~priceToUint",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "params": [
      {
        "name": "price",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 174,
    "kind": "function",
    "name": "bnToPrice",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~bnToPrice",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "params": [
      {
        "name": "uint",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "lifWei2Lif",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~lifWei2Lif",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "lif2LifWei",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~lif2LifWei",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "locationToUint",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~locationToUint",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [
      {
        "name": "longitude",
        "types": [
          "*"
        ]
      },
      {
        "name": "latitude",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"long\": *, \"lat\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 178,
    "kind": "function",
    "name": "locationFromUint",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~locationFromUint",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "params": [
      {
        "name": "longitude",
        "types": [
          "*"
        ]
      },
      {
        "name": "latitude",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"lat\": *, \"long\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 179,
    "kind": "function",
    "name": "bytes32ToString",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~bytes32ToString",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [
      {
        "name": "hex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 180,
    "kind": "function",
    "name": "getGuestData",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "libs/utils/misc.js~getGuestData",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": "Extracts the guest data from an instant payment Booking initiated by\na `token.approveData` transaction.",
    "lineNumber": 149,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "hash",
        "description": "transaction hash, available on the `CallStarted` event"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "execution context of the class ()"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "plain text guest data. If this is JSON it will need to be parsed."
    },
    "ignore": true
  },
  {
    "__docId__": 181,
    "kind": "function",
    "name": "addGasMargin",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "libs/utils/misc.js~addGasMargin",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "params": [
      {
        "name": "gas",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 182,
    "kind": "function",
    "name": "getInstance",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~getInstance",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 170,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "address",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 183,
    "kind": "function",
    "name": "fundAccount",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "libs/utils/misc.js~fundAccount",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 177,
    "undocument": true,
    "params": [
      {
        "name": "from",
        "types": [
          "*"
        ]
      },
      {
        "name": "to",
        "types": [
          "*"
        ]
      },
      {
        "name": "amount",
        "types": [
          "*"
        ]
      },
      {
        "name": "_web3",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "jsArrayFromSolidityArray",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "libs/utils/misc.js~jsArrayFromSolidityArray",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": "Traverses a solidity array and returns an array of all its non-zero elements",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "getAtIndex",
        "description": "reference to a getter method (e.g. getImage)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": "solidity array's length"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "zeroComparator",
        "description": "e.g isZeroAddress"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Array"
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "pretty",
    "memberof": "libs/utils/misc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "libs/utils/misc.js~pretty",
    "access": "public",
    "export": false,
    "importPath": "wt-js-libs/libs/utils/misc.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "params": [
      {
        "name": "msg",
        "types": [
          "*"
        ]
      },
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# Winding Tree Javascript Libraries for Hotels\n\nA JS interface to WindingTree's Ethereum smart-contracts for Hotels.\n\n## Documentation\n\nSee documentation here https://windingtree.github.io/wt-js-libs/\n\n## Install\n\n```sh\ngit clone https://github.com/windingtree/wt-js-libs --recursive\nnpm install\n```\n\n## Test\n\nTo run unit tests on the contracts `npm test`, it will start a testrpc instance and run the tests in a private network.\n\n```sh\nnpm test\n```\n\n## Build Docs\n\n```sh\nnpm run docs-build // Build documentation\nnpm run docs-view  // View documentation\n```\n\n\n",
    "longname": "/Users/aklempner/Repos/WindingTree/libs-updated/wt-js-libs/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"wt-js-libs\",\n  \"version\": \"0.1.0\",\n  \"description\": \"Javascript libraries to interact with the Winding Tree contracts\",\n  \"main\": \"truffle.js\",\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"test\": \"./scripts/test.sh\",\n    \"test-build\": \"TEST_BUILD=true ./scripts/test.sh\",\n    \"postinstall\": \"scripts/install.sh\",\n    \"recompile\": \"rm -rf build && ./node_modules/.bin/truffle migrate --reset\",\n    \"docs-build\": \"./node_modules/.bin/esdoc\",\n    \"docs-view\": \"open ./docs/index.html\",\n    \"build\": \"webpack --config build.web.config.js && webpack --config build.node.config.js\",\n    \"update-submodules\": \"git submodule update --recursive && npm run postinstall\",\n    \"pull-submodules\": \"git submodule foreach git pull origin master && npm run postinstall\"\n  },\n  \"keywords\": [\n    \"winding-tree\",\n    \"security\",\n    \"encryption\",\n    \"smart-contracts\"\n  ],\n  \"author\": \"Winding Tree Developers <dev@windingtree.com>\",\n  \"license\": \"MIT\",\n  \"browser\": {\n    \"fs\": false,\n    \"child_process\": false\n  },\n  \"dependencies\": {\n    \"abi-decoder\": \"^1.0.8\",\n    \"babel-core\": \"^6.17.0\",\n    \"babel-loader\": \"^6.2.0\",\n    \"babel-polyfill\": \"^6.23.0\",\n    \"babel-preset-es2015\": \"^6.3.13\",\n    \"chai\": \"^3.5.0\",\n    \"chai-string\": \"^1.4.0\",\n    \"kbpgp\": \"^2.0.72\",\n    \"moment\": \"^2.18.1\",\n    \"web3\": \"^1.0.0-beta.23\",\n    \"zeppelin-solidity\": \"^1.2.0\"\n  },\n  \"devDependencies\": {\n    \"esdoc\": \"^1.0.3\",\n    \"esdoc-node\": \"^1.0.2\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"ethereumjs-testrpc\": \"3.9.2\",\n    \"truffle\": \"4.0.0\",\n    \"webpack\": \"^2.4.1\",\n    \"webpack-bundle-size-analyzer\": \"^2.7.0\"\n  }\n}\n",
    "longname": "/Users/aklempner/Repos/WindingTree/libs-updated/wt-js-libs/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]